<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jieandata.dal.dao.UserLoginLogMapper">
  <resultMap id="BaseResultMap" type="com.jieandata.dal.model.UserLoginLogDo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="intefaceType" jdbcType="VARCHAR" property="intefaceType" />
    <result column="deviceType" jdbcType="CHAR" property="deviceType" />
    <result column="deviceNo" jdbcType="VARCHAR" property="deviceNo" />
    <result column="logTime" jdbcType="INTEGER" property="logTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, mobile, intefaceType, deviceType, deviceNo, logTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_login_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_login_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jieandata.dal.model.UserLoginLogDo">
    insert into user_login_log (id, userId, mobile, 
      intefaceType, deviceType, deviceNo, 
      logTime)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, 
      #{intefaceType,jdbcType=VARCHAR}, #{deviceType,jdbcType=CHAR}, #{deviceNo,jdbcType=VARCHAR}, 
      #{logTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jieandata.dal.model.UserLoginLogDo">
    insert into user_login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="intefaceType != null">
        intefaceType,
      </if>
      <if test="deviceType != null">
        deviceType,
      </if>
      <if test="deviceNo != null">
        deviceNo,
      </if>
      <if test="logTime != null">
        logTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="intefaceType != null">
        #{intefaceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        #{deviceType,jdbcType=CHAR},
      </if>
      <if test="deviceNo != null">
        #{deviceNo,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null">
        #{logTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jieandata.dal.model.UserLoginLogDo">
    update user_login_log
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="intefaceType != null">
        intefaceType = #{intefaceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        deviceType = #{deviceType,jdbcType=CHAR},
      </if>
      <if test="deviceNo != null">
        deviceNo = #{deviceNo,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null">
        logTime = #{logTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jieandata.dal.model.UserLoginLogDo">
    update user_login_log
    set userId = #{userId,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      intefaceType = #{intefaceType,jdbcType=VARCHAR},
      deviceType = #{deviceType,jdbcType=CHAR},
      deviceNo = #{deviceNo,jdbcType=VARCHAR},
      logTime = #{logTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getOneByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_login_log
    where
    id in
    (select max(id) from user_login_log where userId = #{userId,jdbcType=INTEGER})
  </select>
</mapper>